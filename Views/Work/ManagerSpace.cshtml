@model ManagersInfo
@{
    Layout = "_Layout";
    ViewBag.Title = "Ваш личный кабинет";
    var contracts = Model.Contracts;
    var jobs = Model.Jobs;
    var avClients = Model.AvailableClients;
    var ptClients = Model.PotentialClients;
    var employees = Model.Employees;
    var sneakers = Model.Sneakers;
}

<div class="row">

    <label class="row h1">Контракты:</label>
    <div class="row rounded alert alert-success" data-bs-spy="scroll">
        @foreach (AvailableClient client in avClients)
        {
            var clientContracts = contracts.Where(c => c.ClientId == client.ClientId).Select(c => c).ToList();
            var potClient = ptClients.First(pc => pc.ClientId == client.ClientId);
            Dictionary<string, string> sneakerModelToAmount = (from clc in clientContracts
                                                               join sn in sneakers on clc.SneakerId equals sn.SneakerId
                                                               select new { Key = sn.Model, Value = clientContracts.Count(c => c.SneakerId == sn.SneakerId).ToString() }).ToDictionary(item => item.Key, item => item.Value);
            <div class="col-10 btn-light">
                <p class="row">@client.OrganisationName : @clientContracts.Count()</p>
                @if (potClient.Meeting is not null)
                {
                    <p class="row">Встреча назначена на @potClient.Meeting.ToString()</p>
                }
                @if (clientContracts.Any(clc => clc.Deadline is not null))
                {
                    <p>Заказ должен быть готов к: @clientContracts[0].Deadline</p>
                }
                <div class="row alert alert-primary" data-bs-spy="scroll">
                    @foreach (var sneakerModel in sneakerModelToAmount.Keys)
                    {
                        <p class="row">@sneakerModel : @sneakerModelToAmount[sneakerModel]</p>
                    }
                </div>
            </div>
            <button id="append_job_@client.ContractId" class="col btn btn-success m-2">Добавить задание</button>
        }
    </div>

    <div class="row alert alert-success">
        <input id="client_search_info" class="col-8" type="text" placeholder="Введите что-то о клиенте"/>
        <button id="client_searchb" class="col btn btn-primary ms-1">Найти клиента</button>
        <div id="client_search_res" class="row"></div>
    </div>
    <div class="row">
        <p class="row"> Отчётность:</p>
        <div class="row alert alert-success">
            <button id="employee_report" class="col-3 btn btn-success">Отчёт по работникам</button>
            <p class="col text-center"><-- Выберите вид отчёта --></p>
            <button id="job_report" class="col-3 btn btn-success">Отчёт по заданиям</button>
        </div>
    </div>
    <a class="row btn btn-danger" asp-action="Logout" asp-controller="Verification">Выйти из системы</a>
</div>

@section Scripts{
    <script src="~/js/Reports.js"></script>
    <script>
        var avClients = @Html.Raw(Json.Serialize(Model.AvailableClients));
        var ptClients = @Html.Raw(Json.Serialize(Model.PotentialClients));
        var allClients = [...avClients, ...ptClients];
        allClients = [...new Set(allClients.map(cl => cl))];

        var contracts = @Html.Raw(Json.Serialize(Model.Contracts));

        var redirect = function(contractId){
            const url = @Url.Action("AppendJob", "Work", new { employees = Model.Employees.ToList(), contracts = Model.Contracts.FirstOrDefault(c => c.ContractId.ToString() == "__contractId__")});
            window.location.href = url.replace('__contractId__', contractId);
        }
    </script>
    <script src="~/js/ClientSearcher.js"></script>
    <script src="~/js/AppendingJobs.js"></script>
}
